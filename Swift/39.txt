import UIKit

class MasterViewController: UITableViewController {
    let filename = "start"
    var allWords = [String]()
    var objects = [String]()


    override func viewDidLoad() {
        super.viewDidLoad()

        setupUI()
        importWordList()
        startGame()
    }

    func setupUI() {
        self.navigationItem.leftBarButtonItem = UIBarButtonItem(barButtonSystemItem: .Refresh, target: self, action: "startGame")
        self.navigationItem.rightBarButtonItem = UIBarButtonItem(barButtonSystemItem: .Add, target: self, action: "promptForAnswer")
    }

    func importWordList() {
        if let startWordsPath = NSBundle.mainBundle().pathForResource(filename, ofType: "txt") {
            if let startWords = NSString(contentsOfFile: startWordsPath, usedEncoding: nil, error: nil) {
                allWords = startWords.componentsSeparatedByString("\n") as! [String]
            }
        } else {
            allWords = ["silkworm"]
        }
    }
    
    func startGame() {
        allWords.shuffle()
        title = allWords[0]
        objects.removeAll(keepCapacity: true)
        tableView.reloadData()
    }

    func promptForAnswer() {
        let ac = UIAlertController(title: "Enter answer", message: nil, preferredStyle: .Alert)
        ac.addTextFieldWithConfigurationHandler(nil)

        let submitAction = UIAlertAction(title: "Submit", style: .Default) { [unowned self, ac] (action: UIAlertAction!) in
            let answer = ac.textFields![0] as! UITextField
            self.processAnswer(answer.text)
        }

        ac.addAction(submitAction)
        presentViewController(ac, animated: true, completion: nil)
    }

    func processAnswer(answer: String) {
        if allChecksPass(answer) {
            updateAnswerList(answer)
        }
    }

    func allChecksPass(answer: String) -> Bool {
        let tests = [
            (
                check: isLegal,
                title: "Word not possible",
                desc: "You can't spell that word from '\(title!.lowercaseString)'!"
            ),
            (
                check: isOriginal,
                title: "Word used already",
                desc: "Be more original!"
            ),
            (
                check: isReal,
                title: "Word not recognised",
                desc: "You can't just make them up, you know!"
            )
        ]

        for test in tests {
            if !test.check(answer.lowercaseString) {
                displayFail(test.title, desc: test.desc)
                return false
            }
        }
        return true
    }

    func displayFail(title: String, desc: String) {
        let ac = UIAlertController(title: title, message: desc, preferredStyle: .Alert)
        ac.addAction(UIAlertAction(title: "OK", style: .Default, handler: nil))
        presentViewController(ac, animated: true, completion: nil)
    }

    func updateAnswerList(answer: String) {
        objects.insert(answer, atIndex: 0)
        let indexPath = NSIndexPath(forRow: 0, inSection: 0)
        tableView.insertRowsAtIndexPaths([indexPath], withRowAnimation: .Automatic)
    }

    func isLegal(word: String) -> Bool {
        var tempWord = title!.lowercaseString
        if word.isEmpty {
            return false
        }

        for letter in word {
            if let pos = tempWord.rangeOfString(String(letter)) {
                if pos.isEmpty {
                    return false
                } else {
                    tempWord.removeAtIndex(pos.startIndex)
                }
            } else {
                return false
            }
        }

        return true
    }

    func isOriginal(word: String) -> Bool {
        return !contains(objects, word)
    }

    func isReal(word: String) -> Bool {
        let nsWord = word as NSString
        let checker = UITextChecker()
        let range = NSMakeRange(0, nsWord.length)
        let misspelledRange = checker.rangeOfMisspelledWordInString(word as String, range: range, startingAt: 0, wrap: false, language: "en")
        return misspelledRange.location == NSNotFound
    }
    

    // MARK: - Table View
    override func numberOfSectionsInTableView(tableView: UITableView) -> Int {
        return 1
    }

    override func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return objects.count
    }

    override func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCellWithIdentifier("Cell", forIndexPath: indexPath) as! UITableViewCell
        cell.textLabel!.text = objects[indexPath.row]
        return cell
    }
}