class LabelView: UIView
{
  var labelBackgroundColor:UIColor? {
    get { return self.backgroundColor }
    set {
      self.backgroundColor = newValue
      self.label.backgroundColor = newValue
    }
  }
  
  let label = UILabel(frame: CGRectZero)
  let insetting = UIEdgeInsetsMake(5, 15, 5, 15)
  
  override convenience init(frame:CGRect) {
    // defaults
    let kpillBackgroundColor:UIColor = UIColor.greenColor()
    let kpillTextColor:UIColor = UIColor.whiteColor()
    let kpillTextFontSize:CGFloat = CGFloat(9)
    let kpillTextFont:UIFont = UIFont.systemFontOfSize(kpillTextFontSize)
    
    self.init(frame:frame, pillBackgroundColor:kpillBackgroundColor,pillTextColor:kpillTextColor,pillTextFont:kpillTextFont)
  }
  
  init(frame:CGRect, pillBackgroundColor:UIColor,pillTextColor:UIColor,pillTextFont:UIFont) {
    
    super.init(frame:frame)
    
    self.setTranslatesAutoresizingMaskIntoConstraints(false)
    self.autoresizingMask = UIViewAutoresizing.None
    
    self.backgroundColor = pillBackgroundColor
    self.clipsToBounds = true
    label.backgroundColor = pillBackgroundColor
    label.textColor = pillTextColor
    label.font = pillTextFont
    label.frame = UIEdgeInsetsInsetRect(self.bounds, self.insetting)
    self.addSubview(label)
    
    let views = ["label":label]
    self.label.setTranslatesAutoresizingMaskIntoConstraints(false)
    self.layoutMargins = insetting
    ["V:|-[label]-|","H:|-[label]-|"].map( { (vfl:String) -> String in
      self.addConstraints(NSLayoutConstraint.constraintsWithVisualFormat(vfl, options: .allZeros, metrics: nil, views: views))
      return vfl
    })
  }
  
  required init(coder aDecoder: NSCoder) {
    fatalError("init(coder:) has not been implemented")
  }
  
  override func layoutSubviews() {
    super.layoutSubviews()
    self.label.frame = UIEdgeInsetsInsetRect(self.bounds,self.insetting)
    self.layer.cornerRadius = self.layer.bounds.size.height / 2.0
  }
  
}


func fillSuperview(view:UIView)
{
  if let superview = view.superview {
    view.setTranslatesAutoresizingMaskIntoConstraints(false)
    view.frame = superview.bounds
    superview.addConstraints(NSLayoutConstraint.constraintsWithVisualFormat("H:|[v]|", options: NSLayoutFormatOptions.allZeros, metrics: nil, views: ["v":view]))
    superview.addConstraints(NSLayoutConstraint.constraintsWithVisualFormat("V:|[v]|", options: NSLayoutFormatOptions.allZeros, metrics: nil, views: ["v":view]))
  }
}
